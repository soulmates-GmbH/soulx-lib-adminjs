name: CI/CD

on:
  push:
    tags:
      - 'v*'

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install
        run: yarn install --frozen-lockfile

  build:
    name: build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install
        run: yarn install
      - name: Assets cache
        uses: actions/cache@v3
        id: assets-cache
        with:
          path: src/frontend/assets/scripts
          key: assets-${{ hashFiles('**/src/frontend/global-entry.js') }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/bin/bundle-globals.js') }}
          restore-keys: |
            assets-
      - name: build
        run: yarn build
      - name: types
        run: yarn types
      - name: bundle globals production
        if: steps.assets-cache.outputs.cache-hit != 'true'
        run: NODE_ENV=production yarn bundle:globals
      - name: bundle globals dev
        if: steps.assets-cache.outputs.cache-hit != 'true'
        run: NODE_ENV=dev yarn bundle:globals
      - name: bundle production
        run: NODE_ENV=production ONCE=true yarn bundle
      - name: bundle dev
        run: ONCE=true yarn bundle
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: lib
          path: lib
      - name: Upload Types
        uses: actions/upload-artifact@v3
        with:
          name: types
          path: types
      - name: Upload Bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: lib/frontend/assets/scripts

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: spell
        run: yarn cspell
      - name: install codecov
        run: yarn global add codecov
      - name: cover
        run: yarn codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: test
        run: yarn test

  publish:
    name: Publish
    needs:
      - test
      - build
    services:
      mongo:
        image: mongo:3.4.23
        ports:
          - 27017:27017
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install
        run: yarn install
      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: lib
          path: lib
      - name: Download Types
        uses: actions/download-artifact@v3
        with:
          name: types
          path: types
      - name: Download Bundle
        uses: actions/download-artifact@v3
        with:
          name: bundle
          path: bundle
      - name: Check directories exists
        uses: andstor/file-existence-action@v2
        with:
          files: "bundle/, lib/, types/"
          fail: true
      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          npm publish --access public
        # run: yarn release
